/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMODEM_H
#define _MOCKMODEM_H

#include "../unit/unity.h"
#include "../modem.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockmodem_Init(void);
void Mockmodem_Destroy(void);
void Mockmodem_Verify(void);




#define modem_initialise_Ignore() modem_initialise_CMockIgnore()
void modem_initialise_CMockIgnore(void);
#define modem_initialise_StopIgnore() modem_initialise_CMockStopIgnore()
void modem_initialise_CMockStopIgnore(void);
#define modem_initialise_Expect() modem_initialise_CMockExpect(__LINE__)
void modem_initialise_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_modem_initialise_CALLBACK)(int cmock_num_calls);
void modem_initialise_AddCallback(CMOCK_modem_initialise_CALLBACK Callback);
void modem_initialise_Stub(CMOCK_modem_initialise_CALLBACK Callback);
#define modem_initialise_StubWithCallback modem_initialise_Stub
#define modem_open_Ignore() modem_open_CMockIgnore()
void modem_open_CMockIgnore(void);
#define modem_open_StopIgnore() modem_open_CMockStopIgnore()
void modem_open_CMockStopIgnore(void);
#define modem_open_Expect(coordinator) modem_open_CMockExpect(__LINE__, coordinator)
void modem_open_CMockExpect(UNITY_LINE_TYPE cmock_line, uint64_t coordinator);
typedef void (* CMOCK_modem_open_CALLBACK)(uint64_t coordinator, int cmock_num_calls);
void modem_open_AddCallback(CMOCK_modem_open_CALLBACK Callback);
void modem_open_Stub(CMOCK_modem_open_CALLBACK Callback);
#define modem_open_StubWithCallback modem_open_Stub
#define modem_close_Ignore() modem_close_CMockIgnore()
void modem_close_CMockIgnore(void);
#define modem_close_StopIgnore() modem_close_CMockStopIgnore()
void modem_close_CMockStopIgnore(void);
#define modem_close_Expect() modem_close_CMockExpect(__LINE__)
void modem_close_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_modem_close_CALLBACK)(int cmock_num_calls);
void modem_close_AddCallback(CMOCK_modem_close_CALLBACK Callback);
void modem_close_Stub(CMOCK_modem_close_CALLBACK Callback);
#define modem_close_StubWithCallback modem_close_Stub
#define modem_message_arrived_IgnoreAndReturn(cmock_retval) modem_message_arrived_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void modem_message_arrived_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define modem_message_arrived_StopIgnore() modem_message_arrived_CMockStopIgnore()
void modem_message_arrived_CMockStopIgnore(void);
#define modem_message_arrived_ExpectAndReturn(cmock_retval) modem_message_arrived_CMockExpectAndReturn(__LINE__, cmock_retval)
void modem_message_arrived_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
typedef bool (* CMOCK_modem_message_arrived_CALLBACK)(int cmock_num_calls);
void modem_message_arrived_AddCallback(CMOCK_modem_message_arrived_CALLBACK Callback);
void modem_message_arrived_Stub(CMOCK_modem_message_arrived_CALLBACK Callback);
#define modem_message_arrived_StubWithCallback modem_message_arrived_Stub
#define modem_get_coord_addr_IgnoreAndReturn(cmock_retval) modem_get_coord_addr_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void modem_get_coord_addr_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint64_t cmock_to_return);
#define modem_get_coord_addr_StopIgnore() modem_get_coord_addr_CMockStopIgnore()
void modem_get_coord_addr_CMockStopIgnore(void);
#define modem_get_coord_addr_ExpectAndReturn(cmock_retval) modem_get_coord_addr_CMockExpectAndReturn(__LINE__, cmock_retval)
void modem_get_coord_addr_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint64_t cmock_to_return);
typedef uint64_t (* CMOCK_modem_get_coord_addr_CALLBACK)(int cmock_num_calls);
void modem_get_coord_addr_AddCallback(CMOCK_modem_get_coord_addr_CALLBACK Callback);
void modem_get_coord_addr_Stub(CMOCK_modem_get_coord_addr_CALLBACK Callback);
#define modem_get_coord_addr_StubWithCallback modem_get_coord_addr_Stub
#define modem_receive_message_IgnoreAndReturn(cmock_retval) modem_receive_message_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void modem_receive_message_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, ModemResponse_t* cmock_to_return);
#define modem_receive_message_StopIgnore() modem_receive_message_CMockStopIgnore()
void modem_receive_message_CMockStopIgnore(void);
#define modem_receive_message_ExpectAndReturn(cmock_retval) modem_receive_message_CMockExpectAndReturn(__LINE__, cmock_retval)
void modem_receive_message_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ModemResponse_t* cmock_to_return);
typedef ModemResponse_t* (* CMOCK_modem_receive_message_CALLBACK)(int cmock_num_calls);
void modem_receive_message_AddCallback(CMOCK_modem_receive_message_CALLBACK Callback);
void modem_receive_message_Stub(CMOCK_modem_receive_message_CALLBACK Callback);
#define modem_receive_message_StubWithCallback modem_receive_message_Stub
#define modem_send_message_Ignore() modem_send_message_CMockIgnore()
void modem_send_message_CMockIgnore(void);
#define modem_send_message_StopIgnore() modem_send_message_CMockStopIgnore()
void modem_send_message_CMockStopIgnore(void);
#define modem_send_message_Expect(node_message, data_length) modem_send_message_CMockExpect(__LINE__, node_message, data_length)
void modem_send_message_CMockExpect(UNITY_LINE_TYPE cmock_line, unsigned char* node_message, uint8_t data_length);
typedef void (* CMOCK_modem_send_message_CALLBACK)(unsigned char* node_message, uint8_t data_length, int cmock_num_calls);
void modem_send_message_AddCallback(CMOCK_modem_send_message_CALLBACK Callback);
void modem_send_message_Stub(CMOCK_modem_send_message_CALLBACK Callback);
#define modem_send_message_StubWithCallback modem_send_message_Stub
#define modem_send_message_ReturnThruPtr_node_message(node_message) modem_send_message_CMockReturnMemThruPtr_node_message(__LINE__, node_message, sizeof(unsigned char))
#define modem_send_message_ReturnArrayThruPtr_node_message(node_message, cmock_len) modem_send_message_CMockReturnMemThruPtr_node_message(__LINE__, node_message, cmock_len * sizeof(*node_message))
#define modem_send_message_ReturnMemThruPtr_node_message(node_message, cmock_size) modem_send_message_CMockReturnMemThruPtr_node_message(__LINE__, node_message, cmock_size)
void modem_send_message_CMockReturnMemThruPtr_node_message(UNITY_LINE_TYPE cmock_line, unsigned char* node_message, size_t cmock_size);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
