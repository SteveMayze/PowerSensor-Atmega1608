/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKMODEM_H
#define _MOCKMODEM_H

#include "../unit/unity.h"
#include "../modem.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void Mockmodem_Init(void);
void Mockmodem_Destroy(void);
void Mockmodem_Verify(void);




#define modem_open_Expect(coordinator) modem_open_CMockExpect(__LINE__, coordinator)
void modem_open_CMockExpect(UNITY_LINE_TYPE cmock_line, uint64_t coordinator);
#define modem_close_Expect() modem_close_CMockExpect(__LINE__)
void modem_close_CMockExpect(UNITY_LINE_TYPE cmock_line);
#define modem_message_arrived_ExpectAndReturn(cmock_retval) modem_message_arrived_CMockExpectAndReturn(__LINE__, cmock_retval)
void modem_message_arrived_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool cmock_to_return);
#define modem_get_coord_addr_ExpectAndReturn(cmock_retval) modem_get_coord_addr_CMockExpectAndReturn(__LINE__, cmock_retval)
void modem_get_coord_addr_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint64_t cmock_to_return);
#define modem_receive_message_ExpectAndReturn(cmock_retval) modem_receive_message_CMockExpectAndReturn(__LINE__, cmock_retval)
void modem_receive_message_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, ModemResponse_t* cmock_to_return);
#define modem_send_message_Expect(messasge_stream, message_length) modem_send_message_CMockExpect(__LINE__, messasge_stream, message_length)
void modem_send_message_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* messasge_stream, uint8_t message_length);

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
